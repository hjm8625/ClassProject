# -*- coding: utf-8 -*-
"""compressed_sensing_matrixoperation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RU_ofOu6IMvkIYQYW1ES1nBezwHzPFSJ
"""

import numpy as np
from scipy import io
mat = io.loadmat('DATA3_150.mat')
A = mat['A']
y = mat['y']
K = mat['s']
print('A :', A)
print('y :', y)
print('K :', K)

X_hat=np.zeros((256,256), dtype=complex)
for n in range(0,256):
    S=[]
    y_col=y[:,n]
    R=y_col
    Q=K[0,n]
    for _ in range(0,Q):
        a=0
        j=-1
        for i in range(0,256):
            if i not in S:
                A_col=A[:,i]
                result=abs(np.dot(R.T.conjugate(),A_col))
                if result > a:
                    a=result
                    j=i

        S.append(j)
        A_s=A[:,S]
        p_A_s=np.linalg.pinv(A_s)
        Z=p_A_s@y_col
        R=y_col-A_s@Z
    for idx, s in enumerate(S):
        X_hat[s,n] = Z[idx]
print(X_hat)

# 결과 확인
from PIL import Image
img = Image.fromarray(np.abs(X_hat))
img.show()

